[{"content":"Maybe some of you have same issue like me, have a job but also have side project for fun. If you are like me, it means we are not alone. There are several people who like us, don\u0026rsquo;t worry :) \u0026ldquo;at first I thought I was alone LOL\u0026rdquo;. It is normal for a person who are incapable to do \u0026ldquo;a doing nothing\u0026rdquo; work. In this page, I would like to sharing my \u0026ldquo;Self Employed\u0026rdquo; work with you.\nIt\u0026rsquo;s began while I was studying my Diploma degree, or maybe when I was highschool student. I was a person that loves learning a new thing, especially strategy game. So despite I was going to school for study, sometimes I just go to school\u0026rsquo;s hall to play board game or became football tactic maker. And then this behavior continued until college. I\u0026rsquo;m very passionate in learning new thing and finally start my first self project, that I called \u0026ldquo;A Computer that can See\u0026rdquo;. It is basically just a computer vision.\nFor honest doing programming or computer science is just a hobby, actually my passion lay on pure science. But the universe guide me to join telecommunication engineering, and I decided to focused on computer science as the project reference. For me, it is fun to worked in this field and I became passionate with this field. Until I got my first job in Telecom industry, I still working on my project for pure science and computer science. Fortunately, those fields are related each other so I can work on those project together. Yeas every knowledge must be related each other in some ways.\n","date":"2 April, 2025","id":0,"permalink":"/blog/self-employed/","summary":"Maybe some of you have same issue like me, have a job but also have side project for fun. If you are like me, it means we are not alone. There are several people who like us, don\u0026rsquo;t worry :) \u0026ldquo;at first I thought I was alone LOL\u0026rdquo;. It is normal for a person who are incapable to do \u0026ldquo;a doing nothing\u0026rdquo; work. In this page, I would like to sharing my \u0026ldquo;Self Employed\u0026rdquo; work with you.","tags":"","title":"Self Employed"},{"content":"eBPF SCTP Trace Trace the Protocol ID and print it in kernel Protocol ID for SCTP is 132 and the program was successfully trace data that contain SCTP packet from CU to AMF.\nAlmost all telco protocols are SCTP based, like NGAP, F1AP, nFAPI, E1AP, E2AP, etc. With this filtering process using eBPF, I argue (hypothetically) that the filtering process is much faster because the process is not involve kernel. With this approach I also argue that this filtering process is useful in telco technology, it can be used for security in RAN, observable the packet to get data for Traffic Control, handover and for RIC use cases.\n#include \u0026#34;vmlinux.h\u0026#34; #include \u0026lt;bpf/bpf_endian.h\u0026gt; #include \u0026lt;bpf/bpf_helpers.h\u0026gt; #define ETH_P_IP 0x0800 SEC(\u0026#34;xdp\u0026#34;) int xdp_prog(struct xdp_md *ctx) { void *data_end = (void *)(long)ctx-\u0026gt;data_end; void *data = (void *)(long)ctx-\u0026gt;data; struct ethhdr *eth = data; if ((void *)(eth + 1) \u0026gt; data_end) return XDP_PASS; if (eth-\u0026gt;h_proto == bpf_htons(ETH_P_IP)) { struct iphdr *ipv4 = data + sizeof(*eth); if ((void *)(ipv4 + 1) \u0026gt; data_end) return XDP_PASS; // Print the protocol number bpf_printk(\u0026#34;protocol: %u\\n\u0026#34;, ipv4-\u0026gt;protocol); } return XDP_PASS; } char _license[] SEC(\u0026#34;license\u0026#34;) = \u0026#34;GPL\u0026#34;; This code will check the protocol, if protocol is SCTP, kernel will print sctp protocol id and the packet will PASS.\nTrace Source IP and Destination IP and store the data in perf event With some modification, we could filter tha packet like IP Src and IP Dst like below:\n#include \u0026#34;vmlinux.h\u0026#34; #include \u0026lt;bpf/bpf_endian.h\u0026gt; #include \u0026lt;bpf/bpf_helpers.h\u0026gt; #define ETH_P_IP 0x0800 struct flow_info { __u32 src_ip; __u32 dst_ip; __u16 src_port; __u16 dst_port; __u8 proto; }; struct { __uint(type, BPF_MAP_TYPE_PERF_EVENT_ARRAY); __uint(key_size, sizeof(__u32)); __uint(value_size, sizeof(__u32)); } events SEC(\u0026#34;.maps\u0026#34;); SEC(\u0026#34;xdp\u0026#34;) int xdp_prog(struct xdp_md *ctx) { void *data_end = (void *)(long)ctx-\u0026gt;data_end; void *data = (void *)(long)ctx-\u0026gt;data; struct ethhdr *eth = data; if ((void *)(eth + 1) \u0026gt; data_end) return XDP_PASS; if (eth-\u0026gt;h_proto == bpf_htons(ETH_P_IP)) { struct iphdr *ipv4 = data + sizeof(*eth); if ((void *)(ipv4 + 1) \u0026gt; data_end) return XDP_PASS; // Print the protocol number // bpf_printk(\u0026#34;protocol: %u\\n\u0026#34;, ipv4-\u0026gt;protocol); // bpf_printk(\u0026#34;IP Src: %d\\n\u0026#34;, bpf_ntohl(ipv4-\u0026gt;saddr)); // bpf_printk(\u0026#34;IP Dst: %d\\n\u0026#34;, bpf_ntohl(ipv4-\u0026gt;daddr)); struct flow_info flow = {}; flow.src_ip = ipv4-\u0026gt;saddr; flow.dst_ip = ipv4-\u0026gt;daddr; flow.proto = ipv4-\u0026gt;protocol; bpf_perf_event_output(ctx, \u0026amp;events, BPF_F_CURRENT_CPU, \u0026amp;flow, sizeof(flow)); } return XDP_PASS; } char _license[] SEC(\u0026#34;license\u0026#34;) = \u0026#34;GPL\u0026#34;; The data of the output will store in events file, to open the oytput or view the output we need the userspace application to view BPF_MAP_TYPE_PERF_EVENT_ARRAY like perf buffer in linux.\nFirst thing to do before running the userspace program, we need to specify where the events of our bpf maps will store. To do this we need to do some commands like below:\nThe error bpf_obj_get: No such file or directory indicates that the BPF map at the specified path (/sys/fs/bpf/events) doesn\u0026rsquo;t exist or wasn\u0026rsquo;t created correctly.\nTo fix this issue, you need to ensure the following:\n1. Ensure Your BPF Program Creates the Map Make sure that your BPF program creates a BPF map and pins it to the BPF filesystem (usually mounted at /sys/fs/bpf/).\nIn your BPF program, you should define the map like this:\nstruct { __uint(type, BPF_MAP_TYPE_PERF_EVENT_ARRAY); __uint(max_entries, 128); // Number of CPUs __type(key, u32); __type(value, u32); } events SEC(\u0026#34;.maps\u0026#34;); To pin the map to the BPF filesystem, you can use the following code in the user-space program that loads your BPF program:\nint map_fd = bpf_map__fd(skel-\u0026gt;maps.events); bpf_obj_pin(map_fd, \u0026#34;/sys/fs/bpf/events\u0026#34;); Or, if you\u0026rsquo;re manually loading the BPF program and pinning the map:\nbpftool prog load my_bpf_program.o /sys/fs/bpf/my_bpf_prog bpftool map pin id \u0026lt;map_id\u0026gt; /sys/fs/bpf/events 2. Mount the BPF Filesystem (if not already mounted) Ensure that the BPF filesystem is mounted:\nsudo mount -t bpf bpf /sys/fs/bpf/ This step may be required if you don\u0026rsquo;t have the BPF filesystem mounted on your system.\n3. Load and Pin the Map Correctly Make sure your user-space program or manual commands correctly load and pin the map in the BPF filesystem.\nIf you load the program manually and want to pin the map, you can use the bpftool utility:\nLoad the BPF program:\nsudo bpftool prog load my_bpf_program.o /sys/fs/bpf/my_bpf_prog Pin the map:\nsudo bpftool map pin id \u0026lt;map_id\u0026gt; /sys/fs/bpf/events Replace \u0026lt;map_id\u0026gt; with the ID of your map, which you can find using:\nsudo bpftool map show 4. Verify the Map Exists Once you\u0026rsquo;ve pinned the map, verify that it exists in the expected location:\nls /sys/fs/bpf/events If the file exists, your program should be able to access it without the bpf_obj_get error.\nRecap Ensure your BPF program creates and pins the map. Ensure the BPF filesystem is mounted. Load and pin the map correctly. After following these steps, your user-space program should be able to access the BPF map without errors. If you still encounter issues, please provide more details about your BPF program setup.\n","date":"21 August, 2024","id":1,"permalink":"/documentation/ebpf-sctp-tracing/","summary":"eBPF SCTP Trace Trace the Protocol ID and print it in kernel Protocol ID for SCTP is 132 and the program was successfully trace data that contain SCTP packet from CU to AMF.\nAlmost all telco protocols are SCTP based, like NGAP, F1AP, nFAPI, E1AP, E2AP, etc. With this filtering process using eBPF, I argue (hypothetically) that the filtering process is much faster because the process is not involve kernel. With this approach I also argue that this filtering process is useful in telco technology, it can be used for security in RAN, observable the packet to get data for Traffic Control, handover and for RIC use cases.","tags":"","title":"eBPF Trace SCTP Socket"},{"content":"The lists of my books recommendations from time to time, which I\u0026rsquo;ve beed sharing on this page. This pages list the books that I ret and in my opinion it is good if I share it to you. I will keep this page up to date, so you can see my reference for the knowledge that I\u0026rsquo;ve learnt.\nMath Science Programming UNIX and Linux System UNIX Network Programming Vol.1 3rd Ed. - W. Richard Stevens, Bill Fenner, Andrew M. Rudoff Systems Performance 2nd edition - Brendan Gregg (Addison-Wesley, 2021) BPF Performance Tools - Brendan Gregg (Addison-Wesley, 2019) Telecom Phillosophy Digital Minimalism - Cal Newport Security Shell Scripting Finance and Management ","date":"1 January, 0001","id":2,"permalink":"/books/","summary":"The lists of my books recommendations from time to time, which I\u0026rsquo;ve beed sharing on this page. This pages list the books that I ret and in my opinion it is good if I share it to you. I will keep this page up to date, so you can see my reference for the knowledge that I\u0026rsquo;ve learnt.\nMath Science Programming UNIX and Linux System UNIX Network Programming Vol.1 3rd Ed.","tags":"","title":"Books"},{"content":"You must have Javascript enabled to use this function.\nYour message was sent.\nThere was an error sending the message.\nName E-mail address Subject Message Send message ","date":"1 January, 0001","id":3,"permalink":"/contact/","summary":"You must have Javascript enabled to use this function.\nYour message was sent.\nThere was an error sending the message.\nName E-mail address Subject Message Send message ","tags":"","title":"Contact"},{"content":"","date":"1 January, 0001","id":4,"permalink":"/documentation/sched-ext/","summary":"","tags":"","title":"Sched-Ext a Game Changer for Linux Scheduler"},{"content":"You must have Javascript enabled to use this function.\nLoading search index…\nSearch Title here Date here Summary here\n","date":"1 January, 0001","id":5,"permalink":"/search/","summary":"You must have Javascript enabled to use this function.\nLoading search index…\nSearch Title here Date here Summary here","tags":"","title":"Search"}]