
{
    "version": "https://jsonfeed.org/version/1.1",
    "title": "Documentation on Erich's Site",
    "description": "Recent content in Documentation on Erich's Site",
    "home_page_url": "http://localhost:8080/",
    "feed_url": "http://localhost:8080/documentation/index.json",
    "language": "en-us",
    "icon": "http://localhost:8080/images/logo.png",
    "favicon": "http://localhost:8080/img/logo.png",
    "authors": [
        {
            "name": "Erich",
            "avatar": "http://localhost:8080/images/avatar.jpeg"
        }
    ],
    "items": [
        {
            "title": "eBPF Trace SCTP Socket",
            "date_published": "2024-08-21T00:00:00Z",
            "date_modified": "2024-08-21T00:00:00Z",
            "id": "http://localhost:8080/documentation/ebpf-sctp-tracing/",
            "url": "http://localhost:8080/documentation/ebpf-sctp-tracing/",
            "authors": [
                {
                  "name": "Erich"
                }
            ],
            "content_html": "\u003ch1 id=\"ebpf-sctp-trace\"\u003eeBPF SCTP Trace\u003c/h1\u003e\n\u003cp\u003e\u003cimg src=\"/content/documentation/ebpf-sctp-tracing/image.png\" alt=\"architectured\"\u003e\u003c/p\u003e\n\u003ch2 id=\"trace-the-protocol-id-and-print-it-in-kernel\"\u003eTrace the Protocol ID and print it in kernel\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"/content/documentation/ebpf-sctp-tracing/image1.png\" alt=\"image.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/content/documentation/ebpf-sctp-tracing/image2.png\" alt=\"image.png\"\u003e\u003c/p\u003e\n\u003cp\u003eProtocol ID for \u003cstrong\u003eSCTP is 132\u003c/strong\u003e and the program was successfully trace data that contain SCTP packet from CU to AMF.\u003c/p\u003e\n\u003cp\u003eAlmost all telco protocols are SCTP based, like NGAP, F1AP, nFAPI, E1AP, E2AP, etc. With this filtering process using eBPF, I argue (hypothetically) that the filtering process is much faster because the process is not involve kernel. With this approach I also argue that this filtering process is useful in telco technology, it can be used for security in RAN, observable the packet to get data for Traffic Control, handover and for RIC use cases.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026#34;vmlinux.h\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;bpf/bpf_endian.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;bpf/bpf_helpers.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define ETH_P_IP 0x0800\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;xdp\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003exdp_prog\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e xdp_md \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003ectx) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003edata_end \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(\u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e)ctx\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003edata_end;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003edata \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(\u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e)ctx\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003edata;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e ethhdr \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eeth \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e ((\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(eth \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e data_end)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (eth\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003eh_proto \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebpf_htons\u003c/span\u003e(ETH_P_IP)) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e iphdr \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eipv4 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esizeof\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eeth);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e ((\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(ipv4 \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e data_end)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Print the protocol number\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#a6e22e\"\u003ebpf_printk\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;protocol: %u\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e, ipv4\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003eprotocol);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003echar\u003c/span\u003e _license[] \u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;license\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;GPL\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis code will check the protocol, if protocol is SCTP, kernel will print sctp protocol id and the packet will PASS.\u003c/p\u003e\n\u003ch2 id=\"trace-source-ip-and-destination-ip-and-store-the-data-in-perf-event\"\u003eTrace Source IP and Destination IP and store the data in perf event\u003c/h2\u003e\n\u003cp\u003eWith some modification, we could filter tha packet like IP Src and IP Dst like below:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026#34;vmlinux.h\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;bpf/bpf_endian.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;bpf/bpf_helpers.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#define ETH_P_IP 0x0800\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e flow_info {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    __u32 src_ip;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    __u32 dst_ip;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    __u16 src_port;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    __u16 dst_port;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    __u8 proto;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#a6e22e\"\u003e__uint\u003c/span\u003e(type, BPF_MAP_TYPE_PERF_EVENT_ARRAY);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#a6e22e\"\u003e__uint\u003c/span\u003e(key_size, \u003cspan style=\"color:#66d9ef\"\u003esizeof\u003c/span\u003e(__u32));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   \u003cspan style=\"color:#a6e22e\"\u003e__uint\u003c/span\u003e(value_size, \u003cspan style=\"color:#66d9ef\"\u003esizeof\u003c/span\u003e(__u32));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} events \u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.maps\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;xdp\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003exdp_prog\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e xdp_md \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003ectx) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003edata_end \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(\u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e)ctx\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003edata_end;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003edata \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(\u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e)ctx\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003edata;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e ethhdr \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eeth \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e ((\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(eth \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e data_end)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (eth\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003eh_proto \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebpf_htons\u003c/span\u003e(ETH_P_IP)) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e iphdr \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eipv4 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e data \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003esizeof\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003eeth);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e ((\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e)(ipv4 \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e data_end)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Print the protocol number\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// bpf_printk(\u0026#34;protocol: %u\\n\u0026#34;, ipv4-\u0026gt;protocol);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// bpf_printk(\u0026#34;IP Src: %d\\n\u0026#34;, bpf_ntohl(ipv4-\u0026gt;saddr));\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#75715e\"\u003e// bpf_printk(\u0026#34;IP Dst: %d\\n\u0026#34;, bpf_ntohl(ipv4-\u0026gt;daddr));\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\t\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e flow_info flow \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e {};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tflow.src_ip \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ipv4\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003esaddr;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tflow.dst_ip \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ipv4\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003edaddr;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tflow.proto \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ipv4\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003eprotocol;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#a6e22e\"\u003ebpf_perf_event_output\u003c/span\u003e(ctx, \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003eevents, BPF_F_CURRENT_CPU, \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003eflow, \u003cspan style=\"color:#66d9ef\"\u003esizeof\u003c/span\u003e(flow));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e XDP_PASS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003echar\u003c/span\u003e _license[] \u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;license\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;GPL\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"/content/documentation/ebpf-sctp-tracing/image3.png\" alt=\"image.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe data of the output will store in events file, to open the oytput or view the output we need the userspace application to view BPF_MAP_TYPE_PERF_EVENT_ARRAY like perf buffer in linux.\u003c/p\u003e\n\u003cp\u003eFirst thing to do before running the userspace program, we need to specify where the events of our bpf maps will store. To do this we need to do some commands like below:\u003c/p\u003e\n\u003cp\u003eThe error \u003ccode\u003ebpf_obj_get: No such file or directory\u003c/code\u003e indicates that the BPF map at the specified path (\u003ccode\u003e/sys/fs/bpf/events\u003c/code\u003e) doesn\u0026rsquo;t exist or wasn\u0026rsquo;t created correctly.\u003c/p\u003e\n\u003cp\u003eTo fix this issue, you need to ensure the following:\u003c/p\u003e\n\u003ch3 id=\"1-ensure-your-bpf-program-creates-the-map\"\u003e1. Ensure Your BPF Program Creates the Map\u003c/h3\u003e\n\u003cp\u003eMake sure that your BPF program creates a BPF map and pins it to the BPF filesystem (usually mounted at \u003ccode\u003e/sys/fs/bpf/\u003c/code\u003e).\u003c/p\u003e\n\u003cp\u003eIn your BPF program, you should define the map like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003estruct\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e__uint\u003c/span\u003e(type, BPF_MAP_TYPE_PERF_EVENT_ARRAY);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e__uint\u003c/span\u003e(max_entries, \u003cspan style=\"color:#ae81ff\"\u003e128\u003c/span\u003e);  \u003cspan style=\"color:#75715e\"\u003e// Number of CPUs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003e__type\u003c/span\u003e(key, u32);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e__type\u003c/span\u003e(value, u32);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} events \u003cspan style=\"color:#a6e22e\"\u003eSEC\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.maps\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo pin the map to the BPF filesystem, you can use the following code in the user-space program that loads your BPF program:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e map_fd \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebpf_map__fd\u003c/span\u003e(skel\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003emaps.events);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ebpf_obj_pin\u003c/span\u003e(map_fd, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/sys/fs/bpf/events\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr, if you\u0026rsquo;re manually loading the BPF program and pinning the map:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebpftool prog load my_bpf_program.o /sys/fs/bpf/my_bpf_prog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebpftool map pin id \u0026lt;map_id\u0026gt; /sys/fs/bpf/events\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-mount-the-bpf-filesystem-if-not-already-mounted\"\u003e2. Mount the BPF Filesystem (if not already mounted)\u003c/h3\u003e\n\u003cp\u003eEnsure that the BPF filesystem is mounted:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo mount -t bpf bpf /sys/fs/bpf/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis step may be required if you don\u0026rsquo;t have the BPF filesystem mounted on your system.\u003c/p\u003e\n\u003ch3 id=\"3-load-and-pin-the-map-correctly\"\u003e3. Load and Pin the Map Correctly\u003c/h3\u003e\n\u003cp\u003eMake sure your user-space program or manual commands correctly load and pin the map in the BPF filesystem.\u003c/p\u003e\n\u003cp\u003eIf you load the program manually and want to pin the map, you can use the \u003ccode\u003ebpftool\u003c/code\u003e utility:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eLoad the BPF program:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo bpftool prog load my_bpf_program.o /sys/fs/bpf/my_bpf_prog\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePin the map:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo bpftool map pin id \u0026lt;map_id\u0026gt; /sys/fs/bpf/events\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReplace \u003ccode\u003e\u0026lt;map_id\u0026gt;\u003c/code\u003e with the ID of your map, which you can find using:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo bpftool map show\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"4-verify-the-map-exists\"\u003e4. Verify the Map Exists\u003c/h3\u003e\n\u003cp\u003eOnce you\u0026rsquo;ve pinned the map, verify that it exists in the expected location:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003els /sys/fs/bpf/events\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf the file exists, your program should be able to access it without the \u003ccode\u003ebpf_obj_get\u003c/code\u003e error.\u003c/p\u003e\n\u003ch3 id=\"recap\"\u003eRecap\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eEnsure your BPF program creates and pins the map.\u003c/li\u003e\n\u003cli\u003eEnsure the BPF filesystem is mounted.\u003c/li\u003e\n\u003cli\u003eLoad and pin the map correctly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAfter following these steps, your user-space program should be able to access the BPF map without errors. If you still encounter issues, please provide more details about your BPF program setup.\u003c/p\u003e\n"
        },
        {
            "title": "Sched-Ext a Game Changer for Linux Scheduler",
            "date_published": "0001-01-01T00:00:00Z",
            "date_modified": "0001-01-01T00:00:00Z",
            "id": "http://localhost:8080/documentation/sched-ext/",
            "url": "http://localhost:8080/documentation/sched-ext/",
            "authors": [
                {
                  "name": "Erich"
                }
            ],
            "content_html": ""
        }
        ]
}
